#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;

// Notice that the "1" here equals the "1" in glVertexAttribPointer
layout(location = 1) in vec3 vertexNormal_modelspace;

// Values that stay constant for the whole mesh.
uniform mat4 DepthMVP; //model-view-projection matrix

// Output data ; will be interpolated for each fragment.
out vec3 fragmentNormal;

void main(){

	// Output position of the vertex, projected on screen
	gl_Position =  DepthMVP * vec4(vertexPosition_modelspace, 1);

	// The normal of each vertex will be interpolated to produce the normal of each fragment
	fragmentNormal = vertexNormal_modelspace;
}

